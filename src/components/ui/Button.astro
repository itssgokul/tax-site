---
// Button Component
// ---------------
// Enhanced with subtle hover transformations and clear focus-visible rings.
// Properties:
// - Type: the type of the button ('button', 'submit', 'reset'). Renders <a> if link prop is provided.
// - Size: 'lg', 'base', 'sm'
// - Link: URL for the anchor tag (renders as <a> when provided)
// - Modal: ID of a modal to trigger (optional, adds data-modal attribute)
// - Style: 'primary', 'secondary', 'neutral' (defines color scheme)
// - Variation: 'outline', 'link' (modifies base style)
// - Elevated: boolean (adds shadow effects)
// - classes: additional CSS classes to apply

// Props Interface
interface Props {
	type?: 'button' | 'submit' | 'reset'
	size?: 'lg' | 'base' | 'sm'
	link?: string
	modal?: string
	style?: 'primary' | 'secondary' | 'neutral'
	variation?: 'outline' | 'link'
	elevated?: boolean
	classes?: string
}

// Default Prop Values
const {
	type = 'button',
	size = 'base',
	link,
	modal,
	style = 'primary',
	variation,
	elevated,
	classes
} = Astro.props as Props

// Determine element type (a or button)
const Element = link ? 'a' : 'button'

// Base classes including new transitions and focus ring setup
const baseClasses = `
  button inline-flex cursor-pointer items-center justify-center gap-2 whitespace-nowrap
  rounded font-bold tracking-wide
  transition-all duration-300 ease-in-out
  transform hover:-translate-y-px
  focus:outline-none focus-visible:outline-none
  focus-visible:ring-2 focus-visible:ring-offset-2
  focus-visible:ring-offset-white dark:focus-visible:ring-offset-slate-950
  disabled:cursor-not-allowed disabled:opacity-70 disabled:shadow-none disabled:translate-y-0
`

// Size specific classes
const sizeClasses = {
	lg: 'h-12 px-6 text-sm',
	base: 'h-10 px-5 text-sm',
	sm: 'h-8 px-4 text-xs'
}

// Style specific classes
const styleClasses = {
	primary: `
    bg-primary-500 text-white hover:bg-primary-700 focus-visible:ring-primary-500
    disabled:border-primary-300 disabled:bg-primary-300
    [&.button--variation-link]:bg-transparent [&.button--variation-link]:text-primary-500
    hover:[&.button--variation-link]:text-primary-600 focus:[&.button--variation-link]:text-primary-600
    [&.button--variation-outline]:border-primary-500 [&.button--variation-outline]:bg-transparent
    [&.button--variation-outline]:text-primary-500 [&.button--variation-outline]:hover:border-primary-600
    [&.button--variation-outline]:hover:text-primary-600
  `,
	secondary: `
    bg-primary-50 text-primary-500 hover:bg-primary-100 hover:text-primary-600 focus-visible:ring-primary-500
    disabled:border-primary-300 disabled:bg-primary-100 disabled:text-primary-400
    [&.button--variation-link]:bg-transparent [&.button--variation-link]:text-primary-500
    hover:[&.button--variation-link]:text-primary-600 focus:[&.button--variation-link]:text-primary-600
    [&.button--variation-link_svg]:stroke-primary-500
    [&.button--variation-outline]:border-primary-500 [&.button--variation-outline]:bg-transparent
    [&.button--variation-outline]:text-primary-500 [&.button--variation-outline]:hover:border-primary-600
    [&.button--variation-outline]:hover:text-primary-600
    [&_svg]:stroke-primary-500
  `,
	neutral: `
    bg-neutral-700 text-white hover:bg-neutral-800 focus-visible:ring-neutral-500
    disabled:border-neutral-300 disabled:bg-neutral-300
    [&.button--variation-link]:bg-transparent [&.button--variation-link]:text-neutral-700
    hover:[&.button--variation-link]:text-neutral-800 focus:[&.button--variation-link]:text-neutral-900
    [&.button--variation-outline]:border-neutral-700 [&.button--variation-outline]:bg-transparent
    [&.button--variation-outline]:text-neutral-700 [&.button--variation-outline]:hover:border-neutral-800
    [&.button--variation-outline]:hover:text-neutral-800
  `
}

// Variation specific classes
const variationClasses = {
	outline: 'button--variation-outline border bg-transparent',
	link: 'button--variation-link px-0 font-normal bg-transparent'
}

// Elevation specific classes
const elevationClasses = {
	lg: '[&.button--elevated]:shadow-lg [&.button--elevated]:hover:shadow-md [&.button--elevated]:focus:shadow-md',
	base: '[&.button--elevated]:shadow-md [&.button--elevated]:hover:shadow-sm [&.button--elevated]:focus:shadow-sm',
	sm: '[&.button--elevated]:shadow-md [&.button--elevated]:hover:shadow-sm [&.button--elevated]:focus:shadow-sm',
	primary: '[&.button--elevated]:shadow-primary-500/30',
	secondary: '[&.button--elevated]:shadow-primary-500/30',
	neutral: '[&.button--elevated]:shadow-neutral-500/30'
}
---

{
	Element === 'a' ? (
		<a
			href={link}
			class:list={[
				baseClasses,
				sizeClasses[size],
				styleClasses[style],
				variation ? variationClasses[variation] : '',
				elevated ? 'button--elevated' : '',
				elevated ? elevationClasses[size] : '',
				elevated ? elevationClasses[style] : '',
				classes
			]}
			{...(modal ? { 'data-modal': modal } : {})}
			{...Astro.props}
		>
			<slot />
		</a>
	) : (
		<button
			type={type}
			class:list={[
				baseClasses,
				sizeClasses[size],
				styleClasses[style],
				variation ? variationClasses[variation] : '',
				elevated ? 'button--elevated' : '',
				elevated ? elevationClasses[size] : '',
				elevated ? elevationClasses[style] : '',
				classes
			]}
			{...(modal ? { 'data-modal': modal } : {})}
			{...Astro.props}
		>
			<slot />
		</button>
	)
}

<!-- Note: Removed the <style> block as all styles are now applied via Tailwind classes -->
<!-- in the script section using class:list for better maintainability and composability. -->
<!-- Ensure your tailwind.config.js is set up to scan .astro files and includes the -->
<!-- primary and neutral color palettes used here. -->

<!-- If you prefer keeping the <style> block, you could refactor the logic above -->
<!-- to conditionally apply simpler marker classes (e.g., 'button--primary', 'button--size-lg') -->
<!-- and define the @apply rules within the <style> block as before, incorporating the -->
<!-- new transition, transform, and focus-visible styles. -->
