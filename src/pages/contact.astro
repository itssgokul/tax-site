---
// Components
// - Layout
import Layout from '../layouts/Layout.astro'
// - UI Components (like Button if needed)
import Button from '../components/ui/Button.astro'; // Added for submit button

// Content
// - SEO
const SEO = {
	title: 'OnePointTax. | Get in Touch with Us',
	description:
		'Have questions or need assistance? Contact OnePointTax. today for support, inquiries, or feedback. Our team is here to help you make the most of your OnePointTax. experience.'
}
// - Page Header
const header = {
	title: "We're <strong>here</strong>  to help!",
	text: 'Got questions or need assistance? Fill out the form below, and our team will get back to you promptly to discuss how we can support your financial and business needs. For faster assistance, <br> <span class="text-primary-500"> Feel Free </span> to Call, Email, or reach us on WhatsApp.'
}
---

<Layout title={SEO.title} description={SEO.description}>
	{/* Optional: Keep the header section if desired */}
	<section class="py-16 md:py-24">
		<div class="container mx-auto px-4">
			<div class="mx-auto mb-12 max-w-3xl text-center">
				<h1 class="mb-4 font-headings text-4xl font-black tracking-tight text-neutral-950 md:text-6xl dark:text-white" set:html={header.title} />
				<p class="text-lg text-neutral-500 dark:text-neutral-400" set:html={header.text} />
			</div>

			{/* Standard Contact Form */}
			<div class="mx-auto max-w-xl">
				<form id="contact-form" method="POST" action="/api/submit-contact" class="space-y-6">
					<div>
						<label for="name" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Full Name</label>
						<input type="text" name="name" id="name" required class="mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:border-neutral-600 dark:bg-neutral-800 dark:text-white sm:text-sm" placeholder="John Doe">
					</div>
					<div>
						<label for="email" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Email Address</label>
						<input type="email" name="email" id="email" required class="mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:border-neutral-600 dark:bg-neutral-800 dark:text-white sm:text-sm" placeholder="you@example.com">
					</div>
					<div>
						<label for="phone_number" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Phone Number</label> {/* Removed (Optional) */}
						<input type="tel" name="phone_number" id="phone_number" required class="mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:border-neutral-600 dark:bg-neutral-800 dark:text-white sm:text-sm" placeholder="+1 (555) 123-4567"> {/* Added required */}
					</div>
					<div>
						<label for="service_interest" class="block text-sm font-medium text-neutral-700 dark:text-neutral-300">Service Interest</label>
						<select name="service_interest" id="service_interest" required class="mt-1 block w-full rounded-md border-neutral-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 dark:border-neutral-600 dark:bg-neutral-800 dark:text-white sm:text-sm">
							<option value="" disabled selected>Select a service category...</option>
							<option value="Accounts">Accounts</option>
							<option value="Tax">Tax</option>
							<option value="Registration">Registration</option>
							<option value="Finance">Finance</option>
							<option value="insurance">Insurance</option> {/* Note: lowercase 'i' as per data file */}
							<option value="General Inquiry">General Inquiry</option>
						</select>
					</div>
					<div>
						{/* Changed type to "button" and added specific class */}
						<Button type="button" style="primary" classes="w-full contact-submit-button">Submit</Button>
					</div>
				</form>
				<div id="form-result" class="mt-4 text-center text-sm"></div>
			</div>

		</div>
	</section>
</Layout>

<script>
  console.log("Client-side: Main script tag executed."); // Log script execution start

  function setupContactForm() {
    console.log("Client-side: setupContactForm() called."); // Log function call

    // Cast form to HTMLFormElement
    const form = document.getElementById('contact-form') as HTMLFormElement | null;
    const resultDiv = document.getElementById('form-result');
    // Find the button using the specific class
    console.log("Client-side: Attempting to find button with selector:", '.contact-submit-button'); // Log selector
    const submitButton = form?.querySelector('.contact-submit-button') as HTMLButtonElement | null; 
    console.log("Client-side: submitButton found?", submitButton); // Log the result of the querySelector

    if (form && resultDiv && submitButton) { // Check for button too
      console.log("Client-side: Successfully found form, resultDiv, and submitButton."); // Simplified log
      // Changed from form 'submit' listener to button 'click' listener
      submitButton.addEventListener('click', async () => { // Removed event parameter
        console.log("Client-side: Submit button click event triggered."); // Log click event
        // No need for event.preventDefault() on a type="button" click for form submission
        
        resultDiv.textContent = 'Sending...';
        resultDiv.className = 'mt-4 text-center text-sm text-neutral-600 dark:text-neutral-400'; // Reset classes

        const formData = new FormData(form);
        const requestData = Object.fromEntries(formData.entries());

        try {
          console.log("Client-side: Attempting fetch to /api/submit-contact with JSON body:", requestData); // Add log
          const response = await fetch('/api/submit-contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData),
          });

          const result = await response.json();

          if (response.ok) {
            resultDiv.textContent = result.message || 'Submission successful!';
            resultDiv.className = 'mt-4 text-center text-sm text-green-600 dark:text-green-400';
            form.reset(); // Clear the form - Now valid on HTMLFormElement
          } else {
            resultDiv.textContent = result.message || `Error: ${response.statusText}`;
            resultDiv.className = 'mt-4 text-center text-sm text-red-600 dark:text-red-400';
          }
        } catch (error) {
          // This catch block handles network errors or errors during fetch/response processing (like failed JSON parsing)
          console.error('Client-side: Form submission fetch/processing error:', error); // Log the specific error
          resultDiv.textContent = 'An error occurred during submission. Please check the console.';
          resultDiv.className = 'mt-4 text-center text-sm text-red-600 dark:text-red-400';
        } finally {
            // Optional: Hide message after a delay
            setTimeout(() => {
                if (resultDiv.textContent !== 'Sending...') { // Don't clear if still sending (unlikely but safe)
                   // resultDiv.textContent = '';
                }
            }, 7000); // Hide after 7 seconds
        }
      });
      console.log("Client-side: Click event listener attached to submit button."); // Log listener attachment
    } else {
      // Log which element(s) were not found
      console.error("Client-side: Listener not attached. Missing elements:", { 
        formFound: !!form, 
        resultDivFound: !!resultDiv, 
        submitButtonFound: !!submitButton 
      }); 
    }
  }

  // Run on initial load
  if (document.readyState === 'loading') { //DOMContentLoaded hasn't fired yet
    document.addEventListener('DOMContentLoaded', setupContactForm);
  } else { // DOMContentLoaded has already fired
    setupContactForm();
  }

  // Run after Astro view transitions
  document.addEventListener('astro:page-load', setupContactForm);

</script>
