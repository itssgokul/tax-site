---
// Blog Posts grid Section
// ------------
// Description: A grid of blog posts sorted by date in a 3 column layout.
// Properties:
// - data: An array of blog posts

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import Post from '../../../components/ui/cards/BlogCard.astro'
import TagNavigation from '../../../components/ui/blog/TagNavigation.astro'

// Props
type Props = {
	data: any
}
const { data: allPosts } = Astro.props

// Function to sort posts by date, handling potential undefined input
const sortedPosts = Array.isArray(allPosts)
	? allPosts.sort((a: any, b: any) => {
			// Ensure pubDate exists before trying to create a Date object
			const dateA = a?.data?.pubDate ? new Date(a.data.pubDate).getTime() : 0;
			const dateB = b?.data?.pubDate ? new Date(b.data.pubDate).getTime() : 0;
			return dateB - dateA; // Sort descending (newest first)
		})
	: []; // Default to empty array if allPosts is not an array
---

<Section>
	<Row>
		<Col span="12">
			<TagNavigation />
		</Col>
		{
			sortedPosts.map((post: any) => (
				<Col span="4">
					<Post
						link={`/blog/${post.slug}`}
						title={post.data.title}
						subtitle={`By ${post.data.author} on ${new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}`}
						image={post.data.image}
						tags={post.data.tags}
					>
						{post.data.description}
					</Post>
				</Col>
			))
		}
	</Row>
</Section>
